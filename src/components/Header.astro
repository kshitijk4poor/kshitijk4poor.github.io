---
import Container from "@components/Container.astro";
import Link from "@components/Link.astro";
import { SITE } from "@consts";
---

<header class="py-4">
  <Container>
    <nav class="flex justify-between items-center">
      <Link href="/" class="font-bold">{SITE.NAME}</Link>
      
      <div class="flex items-center gap-4">
        <Link href="/blog">Blog</Link>
        <span>
          {`/`}
        </span>
        
        <div class="flex flex-wrap gap-1 items-center">
          <button
            id="theme-toggle"
            aria-label="Toggle theme"
            class="group size-8 flex items-center justify-center rounded-full"
          >
            <!-- Light theme icon (shown in dark mode) -->
            <svg
              id="light-theme-icon"
              xmlns="http://www.w3.org/2000/svg"
              width="18" height="18" viewBox="0 0 24 24"
              fill="none" stroke="currentColor"
              stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"
              class="absolute opacity-0 scale-95 group-hover:stroke-black group-hover:dark:stroke-white transition-all duration-300 ease-in-out"
            >
              <circle cx="12" cy="12" r="5"></circle>
              <line x1="12" y1="1" x2="12" y2="3"></line>
              <line x1="12" y1="21" x2="12" y2="23"></line>
              <line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line>
              <line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line>
              <line x1="1" y1="12" x2="3" y2="12"></line>
              <line x1="21" y1="12" x2="23" y2="12"></line>
              <line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line>
              <line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line>
            </svg>
            <!-- Dark theme icon (shown in light mode) -->
            <svg
              id="dark-theme-icon"
              xmlns="http://www.w3.org/2000/svg"
              width="18" height="18" viewBox="0 0 24 24"
              fill="none" stroke="currentColor"
              stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"
              class="absolute opacity-0 scale-95 group-hover:stroke-black group-hover:dark:stroke-white transition-all duration-300 ease-in-out"
            >
              <path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"></path>
            </svg>
          </button>
        </div>
      </div>
    </nav>
  </Container>
</header>

<script>
  const themeToggle = document.getElementById('theme-toggle');
  const lightIcon = document.getElementById('light-theme-icon');
  const darkIcon = document.getElementById('dark-theme-icon');

  function showIcon(icon: HTMLElement) {
    icon.classList.remove('opacity-0', 'scale-95');
    icon.classList.add('opacity-100', 'scale-100');
  }

  function hideIcon(icon: HTMLElement) {
    icon.classList.remove('opacity-100', 'scale-100');
    icon.classList.add('opacity-0', 'scale-95');
  }

  // Check system preference initially
  if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
    document.documentElement.classList.add('dark');
    showIcon(lightIcon);
    hideIcon(darkIcon);
  } else {
    showIcon(darkIcon);
    hideIcon(lightIcon);
  }

  // Toggle theme
  themeToggle?.addEventListener('click', () => {
    document.documentElement.classList.toggle('dark');
    
    if (document.documentElement.classList.contains('dark')) {
      showIcon(lightIcon);
      hideIcon(darkIcon);
      localStorage.setItem('theme', 'dark');
    } else {
      showIcon(darkIcon);
      hideIcon(lightIcon);
      localStorage.setItem('theme', 'light');
    }
  });

  // Check for saved preference
  const savedTheme = localStorage.getItem('theme');
  if (savedTheme) {
    if (savedTheme === 'dark') {
      document.documentElement.classList.add('dark');
      showIcon(lightIcon);
      hideIcon(darkIcon);
    } else {
      document.documentElement.classList.remove('dark');
      showIcon(darkIcon);
      hideIcon(lightIcon);
    }
  }
</script>
